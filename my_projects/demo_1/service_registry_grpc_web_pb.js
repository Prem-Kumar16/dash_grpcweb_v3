/**
 * @fileoverview gRPC-Web generated client stub for service_registry
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: service_registry.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.service_registry = require('./service_registry_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.service_registry.ServiceRegistryClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.service_registry.ServiceRegistryPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.service_registry.RegisterRequest,
 *   !proto.service_registry.RegisterResponse>}
 */
const methodDescriptor_ServiceRegistry_Register = new grpc.web.MethodDescriptor(
  '/service_registry.ServiceRegistry/Register',
  grpc.web.MethodType.UNARY,
  proto.service_registry.RegisterRequest,
  proto.service_registry.RegisterResponse,
  /**
   * @param {!proto.service_registry.RegisterRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.service_registry.RegisterResponse.deserializeBinary
);


/**
 * @param {!proto.service_registry.RegisterRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.service_registry.RegisterResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.service_registry.RegisterResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.service_registry.ServiceRegistryClient.prototype.register =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/service_registry.ServiceRegistry/Register',
      request,
      metadata || {},
      methodDescriptor_ServiceRegistry_Register,
      callback);
};


/**
 * @param {!proto.service_registry.RegisterRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.service_registry.RegisterResponse>}
 *     Promise that resolves to the response
 */
proto.service_registry.ServiceRegistryPromiseClient.prototype.register =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/service_registry.ServiceRegistry/Register',
      request,
      metadata || {},
      methodDescriptor_ServiceRegistry_Register);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.service_registry.UnregisterRequest,
 *   !proto.service_registry.UnregisterResponse>}
 */
const methodDescriptor_ServiceRegistry_Unregister = new grpc.web.MethodDescriptor(
  '/service_registry.ServiceRegistry/Unregister',
  grpc.web.MethodType.UNARY,
  proto.service_registry.UnregisterRequest,
  proto.service_registry.UnregisterResponse,
  /**
   * @param {!proto.service_registry.UnregisterRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.service_registry.UnregisterResponse.deserializeBinary
);


/**
 * @param {!proto.service_registry.UnregisterRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.service_registry.UnregisterResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.service_registry.UnregisterResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.service_registry.ServiceRegistryClient.prototype.unregister =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/service_registry.ServiceRegistry/Unregister',
      request,
      metadata || {},
      methodDescriptor_ServiceRegistry_Unregister,
      callback);
};


/**
 * @param {!proto.service_registry.UnregisterRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.service_registry.UnregisterResponse>}
 *     Promise that resolves to the response
 */
proto.service_registry.ServiceRegistryPromiseClient.prototype.unregister =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/service_registry.ServiceRegistry/Unregister',
      request,
      metadata || {},
      methodDescriptor_ServiceRegistry_Unregister);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.service_registry.DiscoverRequest,
 *   !proto.service_registry.DiscoverResponse>}
 */
const methodDescriptor_ServiceRegistry_Discover = new grpc.web.MethodDescriptor(
  '/service_registry.ServiceRegistry/Discover',
  grpc.web.MethodType.UNARY,
  proto.service_registry.DiscoverRequest,
  proto.service_registry.DiscoverResponse,
  /**
   * @param {!proto.service_registry.DiscoverRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.service_registry.DiscoverResponse.deserializeBinary
);


/**
 * @param {!proto.service_registry.DiscoverRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.service_registry.DiscoverResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.service_registry.DiscoverResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.service_registry.ServiceRegistryClient.prototype.discover =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/service_registry.ServiceRegistry/Discover',
      request,
      metadata || {},
      methodDescriptor_ServiceRegistry_Discover,
      callback);
};


/**
 * @param {!proto.service_registry.DiscoverRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.service_registry.DiscoverResponse>}
 *     Promise that resolves to the response
 */
proto.service_registry.ServiceRegistryPromiseClient.prototype.discover =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/service_registry.ServiceRegistry/Discover',
      request,
      metadata || {},
      methodDescriptor_ServiceRegistry_Discover);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.service_registry.DiscoverByNamespaceRequest,
 *   !proto.service_registry.DiscoverByNamespaceResponse>}
 */
const methodDescriptor_ServiceRegistry_DiscoverByNamespace = new grpc.web.MethodDescriptor(
  '/service_registry.ServiceRegistry/DiscoverByNamespace',
  grpc.web.MethodType.UNARY,
  proto.service_registry.DiscoverByNamespaceRequest,
  proto.service_registry.DiscoverByNamespaceResponse,
  /**
   * @param {!proto.service_registry.DiscoverByNamespaceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.service_registry.DiscoverByNamespaceResponse.deserializeBinary
);


/**
 * @param {!proto.service_registry.DiscoverByNamespaceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.service_registry.DiscoverByNamespaceResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.service_registry.DiscoverByNamespaceResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.service_registry.ServiceRegistryClient.prototype.discoverByNamespace =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/service_registry.ServiceRegistry/DiscoverByNamespace',
      request,
      metadata || {},
      methodDescriptor_ServiceRegistry_DiscoverByNamespace,
      callback);
};


/**
 * @param {!proto.service_registry.DiscoverByNamespaceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.service_registry.DiscoverByNamespaceResponse>}
 *     Promise that resolves to the response
 */
proto.service_registry.ServiceRegistryPromiseClient.prototype.discoverByNamespace =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/service_registry.ServiceRegistry/DiscoverByNamespace',
      request,
      metadata || {},
      methodDescriptor_ServiceRegistry_DiscoverByNamespace);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.service_registry.ListRequest,
 *   !proto.service_registry.ListResponse>}
 */
const methodDescriptor_ServiceRegistry_List = new grpc.web.MethodDescriptor(
  '/service_registry.ServiceRegistry/List',
  grpc.web.MethodType.UNARY,
  proto.service_registry.ListRequest,
  proto.service_registry.ListResponse,
  /**
   * @param {!proto.service_registry.ListRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.service_registry.ListResponse.deserializeBinary
);


/**
 * @param {!proto.service_registry.ListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.service_registry.ListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.service_registry.ListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.service_registry.ServiceRegistryClient.prototype.list =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/service_registry.ServiceRegistry/List',
      request,
      metadata || {},
      methodDescriptor_ServiceRegistry_List,
      callback);
};


/**
 * @param {!proto.service_registry.ListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.service_registry.ListResponse>}
 *     Promise that resolves to the response
 */
proto.service_registry.ServiceRegistryPromiseClient.prototype.list =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/service_registry.ServiceRegistry/List',
      request,
      metadata || {},
      methodDescriptor_ServiceRegistry_List);
};


module.exports = proto.service_registry;

